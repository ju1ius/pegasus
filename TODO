## Parser Combinators

* [ ] Error reporting
    * [x] Tracing
    * [ ] Find a way to avoid mutation of the grammar, i.e. :
        - Clone expressions in the visitor instead of the traverser
        - copy the original expression id to the new trace
        Problem is that this is not idempotent
* [x] Apply transforms to parent & traits:
    * [x] Trace
    * [x] Optimizations
* [ ] Grammar composition
* [ ] Grammar inheritance
* [ ] Error recovery
* [ ] CST decimation
* [ ] CST transforms
* [ ] Semantic actions
* [ ] Parametrized rules
* [ ] Lexical rules (w/ whitespace handling)
* [ ] Profiling

## Optimizer

* [ ] Remove unused rules:
    * [ ] Should not remove a rule that may extend a parent
    * [ ] Add new syntax to preserve alternative grammar entrypoints

## Compiler

* [-] Allow extensions to hook into the cli commands
    * [x] Add listeners for command events
    * [ ] Display extension-specific options in command's help
* [ ] Import resolver (dependency graph)
* [ ] Allow escape chars in grammar files (\n, \x20, \u{666}, etc...)
    * [ ] transform them back when compiling
    * [ ] OR just don't care and let people use regexps ???
* [ ] Update runtime / templates

## Examples

* [x] JSON
* [ ] Json5
* [ ] CSS selectors
* [ ] code cleanup

## Experiments

* [ ] investigate performance of throwing Exceptions for failures

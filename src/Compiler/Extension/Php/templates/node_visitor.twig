<?php
/*
 * This file is part of Pegasus
 *
 * (c) 2014 Jules Bernable
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */
{% if namespace %}
namespace {{ namespace }};
{% endif %}

use ju1ius\Pegasus\Node;
use ju1ius\Pegasus\Traverser\NamedNodeTraverser;

/**
 * CST traverser for the `{{ grammar.name }}` grammar.
 */
class {{ grammar.name }}NodeTraverser extends NamedNodeTraverser
{
    /**
     * @inheritDoc
     */
    protected function beforeTraverse(Node $node)
    {
    }

    /**
     * @inheritDoc
     */
    protected function afterTraverse($result)
    {
        return $result;
    }

{% for expr in grammar %}
    /**
     * Enter visitor for rule: {{ expr.name }} = {{ expr }}.
     *
     * @todo Implement this method or remove if not used.
     *
     * @param Node $node The currently visited node.
     *
     * @return void
     */
    protected function enter_{{ expr.name }}(Node $node) {}

    /**
     * Leave visitor for rule: {{ expr.name }} = {{ expr }}.
     *
     * @todo Implement this method or remove if not used.
     *
     * @param Node  $node           The currently visited node.
     * @param mixed ...$children    The result of this node's children visitation.
     *
     * @return mixed The result of this node's visitation.
     */
    protected function leave_{{ expr.name }}(Node $node, ...$children)
    {
        return $this->leaveNode($node, $children);
    }
{% endfor %}
}

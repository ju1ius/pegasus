{% extends 'expr.twig' %}
{% import 'macros.twig' as h %}

{% set count_var = expr_varname(expr, 'count') %}
{% set children_var = expr_varname(expr, 'children') %}
{% set subres_var = result_varname(expr[0]) %}

{% block common_header %}
{{ result_var }} = null;
{{ pos_var }} = $this->pos;
{{ count_var }} = 0;
{%- endblock %}

{% block common_loop %}
{{ render_expr(expr[0], context) }}
if (!{{ subres_var }}) break;
{{ count_var }}++;
{%- endblock %}

{% block matching %}
{{ block('common_header') }}
while ({{ count_var }} < {{ expr.upperBound }}) {
    {{ block('common_loop')|indent }}
}
if ({{ count_var }} >= {{ expr.lowerBound }}) {{ result_var }} = true;
else $this->pos = {{ pos_var }};
{%- endblock %}

{% block capturing %}
{{ block('common_header') }}
{{ children_var }} = $this->isCapturing ? [] : null;
while ({{ count_var }} < {{ expr.upperBound }}) {
    {{ block('common_loop')|indent }}
    if ($this->isCapturing) {{ children_var }}[] = {{ subres_var }};
}
if ({{ count_var }} >= {{ expr.lowerBound }}) {
    {{ result_var }} = $this->isCapturing ? new Quantifier('{{ expr.name }}', {{ pos_var }}, $this->pos, {{ children_var }}, {{ repr(expr.isOptional) }}) : true;
} else {
    $this->pos = {{ pos_var }};
}
{%- endblock %}

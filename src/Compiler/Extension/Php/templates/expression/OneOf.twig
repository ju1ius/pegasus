{% extends "expr.twig" %}

{% set pos_var = position_varname(expr) %}


{% block matching %}
{{ result_var }} = null;
do {
    {{ pos_var }} = $this->pos;
{% for child in expr %}
    {% set subres_var = result_varname(child) -%}
    {{ render_expr(child, context)|indent }}
    if ({{ subres_var }}) {
        {{ result_var }} = true;
        break;
    }
    $this->pos = {{ pos_var }};
{% endfor %}
} while (0);
{%- endblock matching %}


{% block capturing %}
{{ result_var }} = null;
do {
    {{ pos_var }} = $this->pos;
{% for child in expr %}
    {% set subres_var = result_varname(child) -%}
    {{ render_expr(child, context)|indent }}
    if ({{ subres_var }}) {
        {{ result_var }} = {{ subres_var }};
        break;
    }
    $this->pos = {{ pos_var }};
{% endfor %}
} while (0);
{# If we're not a grammar rule, the result node is already lifted! #}
{% if expr.name %}
if ($this->isCapturing && {{ result_var }} && {{ result_var }} !== true) {
    if (!{{ result_var }}->name) {{ result_var }}->name = '{{ expr.name }}';
    else {{ result_var }} = new Decorator('{{ expr.name }}', {{ pos_var }}, $this->pos, {{ result_var }});
}
{%- endif %}
{%- endblock capturing %}
